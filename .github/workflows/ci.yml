name: CI - PodSage App

on:
  push:
    branches: [ master ]
  pull_request:

env:
  APP_DIR: podsage/app
  ML_DIR: podsage/ml_service
  TESTS_DIR: tests

jobs:
  test-app:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          pip install -r $APP_DIR/requirements.txt
          pip install pytest httpx

      - name: Show current directory and contents
        run: |
          pwd
          ls -la

      - name: Run tests
        run: |
          echo $TESTS_DIR/test_app_health.py
          pytest $TESTS_DIR/test_app_health.py
      
      - name: üê≥ Log in to GitHub Container Registry
        run: echo "${{secrets.GHCR_TOKEN}}" | docker login ghcr.io -u ${{secrets.GHCR_USERNAME}} --password-stdin
      
      - name: üèóÔ∏è Build and push App image
        run: |
          docker build -t ghcr.io/${{secrets.GHCR_USERNAME}}/podsage-app:latest $APP_DIR
          docker push ghcr.io/${{secrets.GHCR_USERNAME}}/podsage-app:latest

      # Optional: Slack notification if test fails
      - name: Podsage-App Notify Slack on failure
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_COLOR: '#FF0000'
          SLACK_MESSAGE: |
            üö® PodSage App CI failed on ${{ github.repository }} @ ${{ github.ref }}
            Commit: ${{ github.event.head_commit.message }}
            Author: ${{ github.actor }}

      - name: Podsage-App Slack notification ‚Äì success
        if: success()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_COLOR: '#2EB67D'
          SLACK_MESSAGE: |
            ‚úÖ *PodSage App CI passed* for `${{ github.repository }}`
            Branch: `${{ github.ref_name }}`
            Commit: `${{ github.event.head_commit.message }}`
            By: `${{ github.actor }}`

  test-ml:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install ML dependencies
        run: |
          pip install -r $ML_DIR/requirements.txt
          pip install pytest httpx
          
      - name: ‚úÖ Run ML service tests
        run: |
          export PYTHONPATH=$PYTHONPATH:.

      - name: Podsage-ML Slack notification ‚Äì failure
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_COLOR: '#FF0000'
          SLACK_MESSAGE: |
            ‚ùå *ML Service CI failed* on `${{ github.repository }}`
            Branch: `${{ github.ref_name }}`
            Commit: `${{ github.event.head_commit.message }}`
            By: `${{ github.actor }}`

      - name: Podsage-ML Slack notification ‚Äì success
        if: success()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_COLOR: '#2EB67D'
          SLACK_MESSAGE: |
            ‚úÖ *ML Service CI passed* for `${{ github.repository }}`
            Branch: `${{ github.ref_name }}`
            Commit: `${{ github.event.head_commit.message }}`
            By: `${{ github.actor }}`

      - name: üê≥ Log in to GitHub Container Registry
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u ${{ secrets.GHCR_USERNAME }} --password-stdin

      - name: üèóÔ∏è Build and push ML service image
        run: |
          docker build -t ghcr.io/${{ secrets.GHCR_USERNAME }}/podsage-ml:latest podsage/ml_service
          docker push ghcr.io/${{ secrets.GHCR_USERNAME }}/podsage-ml:latest
